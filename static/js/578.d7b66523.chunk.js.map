{"version":3,"file":"static/js/578.d7b66523.chunk.js","mappings":"8NAIaA,EAAS,mCAAG,oGAEAC,MAAM,GAAD,OANb,iCAMa,OALZ,qBAKY,YAJlB,6CAEa,WAEjBC,EAFiB,QAGTC,GAHS,sBAIf,IAAIC,MAAM,4BAJK,gCAOhBF,EAASG,QAPO,2CAAH,qD,0BCDTC,EAAYC,EAAAA,EAAAA,GAAH,gGAOTC,EAAWD,EAAAA,EAAAA,IAAH,0CAKRE,EAAgBF,EAAAA,EAAAA,GAAH,sBAEbG,EAAaH,EAAAA,EAAAA,GAAH,uFAMVI,EAAgBJ,EAAAA,EAAAA,GAAH,mGAObK,EAAeL,EAAAA,EAAAA,EAAH,mGAOZM,GAAYN,EAAAA,EAAAA,GAAOO,EAAAA,GAAPP,CAAH,gO,SCHtB,EAxBmB,SAAC,GAAgB,IAAdQ,EAAa,EAAbA,OACpB,OACE,iCACE,SAACL,EAAD,8BACA,SAACJ,EAAD,UACGS,EAAOC,KAAI,YAAwD,IAArDC,EAAoD,EAApDA,GAAIC,EAAgD,EAAhDA,eAAgBC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aAC9C,OACE,SAACX,EAAD,WACE,UAACI,EAAD,CAAWQ,GAAE,kBAAaJ,GAA1B,WACA,SAACT,EAAD,CACEc,IAAG,0CAAqCH,GACxCI,IAAI,SAEN,SAACZ,EAAD,UAAgBO,KAChB,SAACN,EAAD,UAAeQ,IANf,QADkBH,EAWvB,QAIR,E,SCDD,EA3Ba,WACX,OAA4BO,EAAAA,EAAAA,UAAS,IAArC,eAAOT,EAAP,KAAeU,EAAf,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WAER,IAAMzB,EAAK,mCAAG,6GAEUD,IAFV,WAEJ2B,EAFI,QAICC,QAAQC,OAJT,sBAKF,IAAIzB,MAAM,oBALR,OAOVqB,GAAU,OAAIE,EAAMC,UAPV,gDASVE,QAAQC,IAAI,KAAMC,SATR,yDAAH,qDAYX/B,GACD,GAAE,KAGD,2BACE,SAAC,EAAD,CAAYc,OAAQA,KAGzB,C,sBC7BD,SAASkB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CACIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,EAEvC,CACe,SAASS,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACTC,EAAOC,UACT,OAAO,IAAIP,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMc,EAAGK,MAAMJ,EAAME,GACzB,SAASd,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CACA,SAASJ,EAAOgB,GACdrB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASgB,EACnE,CACAjB,OAAMkB,EACR,GACF,CACF,C","sources":["api/index.js","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","pages/Home.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3/';\nconst TREND_DAY = 'trending/movie/day';\nconst KEY = 'api_key=dfc4dcf378e2f794649c11a1b66cbaf1';\n\nexport const getMovies = async () => {\n\n  const response = await fetch(`${BASE_URL}${TREND_DAY}?${KEY}`)\n  if (!response.ok) {\n    throw new Error(\"Dont give up! Try again!\");\n  }\n  \n  return response.json();\n};\n\n\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const MovieList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 7px;\n  list-style: none;\n`;\n\nexport const MovieImg = styled.img`\n  width: auto;\n\n`;\n\nexport const MovieListItem = styled.li``;\n\nexport const MovieTitle = styled.h1`\n  padding-left: 50px;\n  font-size: 1.5em;\n  color: #d70005;\n`;\n\nexport const ListItemTitle = styled.h2`\n  padding-top: 2px;\n  font-size: 0.8em;\n  color: #efefef;\n  margin: 0;\n`;\n\nexport const ListItemText = styled.p`\n  padding-top: 2px;\n  margin: 0;\n  font-size: 0.7em;\n  color: #efefef;\n`;\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n  color: #efefef;\n  margin: 0;\n  display: flex;\n  flex-direction: column;\n  width: 140px;\n  transition: transform 0.25s;\n  &:hover  {\n    transform: scale(1.3);\n  }\n`;\n","import {\n  MovieTitle,\n  MovieListItem,\n  MovieList,\n  MovieImg,\n  ListItemTitle,\n  ListItemText,\n  MovieLink,\n} from './MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  return (\n    <>\n      <MovieTitle>Tranding today</MovieTitle>\n      <MovieList>\n        {movies.map(({ id, original_title, poster_path, release_date }) => {\n          return (\n            <MovieListItem key={id}>\n              <MovieLink to={`/movies/${id}`}>\n              <MovieImg\n                src={`https://image.tmdb.org/t/p/w200/${poster_path}`}\n                alt=\"img\"\n              />\n              <ListItemTitle>{original_title}</ListItemTitle>\n              <ListItemText>{release_date}</ListItemText> </MovieLink>\n             \n            </MovieListItem>\n          );\n        })}\n      </MovieList>\n    </>\n  );\n};\n\nexport default MoviesList;\n","import { getMovies } from 'api';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { useState, useEffect } from 'react';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    \n    const fetch = async () => {\n      try {\n        const movie = await getMovies();\n\n        if (!movie.results.length) {\n          throw new Error('No matches found');\n        }\n        setMovies([...movie.results]);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    fetch();\n  }, []);\n\n  return (\n    <main>\n      <MoviesList movies={movies} />\n    </main>\n  );\n};\n\nexport default Home;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["getMovies","fetch","response","ok","Error","json","MovieList","styled","MovieImg","MovieListItem","MovieTitle","ListItemTitle","ListItemText","MovieLink","Link","movies","map","id","original_title","poster_path","release_date","to","src","alt","useState","setMovies","useEffect","movie","results","length","console","log","message","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}