{"version":3,"file":"static/js/158.61952a71.chunk.js","mappings":"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","sources":["pages/Movies.styled.js","pages/Movies.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const MoviesList = styled.ul`\ndisplay: flex;\nflex-wrap: wrap;\ngap: 5px;\nlist-style: none;\n`;\n\nexport const MoviesContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 5px;\n`;\n\nexport const MoviesForm = styled.form`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 5px;\n \n  padding: 0;\n  width: 100%;\n`;\n\nexport const MoviesInput = styled.input`\n  border: none;\n  border-radius: 10px;\n  font-size: 16px;\n  padding: 5px;\n  width: 400px;\n\n`;\n\nexport const MoviesButton = styled.button`\n  border: 1px solid orangered;\n  border-radius: 10px;\n  font-size: 16px;\n  padding: 5px;\n  background-color: transparent;\n  color: #efefef;\n\n  :hover {\n    color: #efefef;\n    background-color: orangered;\n  }\n`;\n\nexport const MoviesLink = styled(NavLink)`\ntext-decoration: none;\ncolor: #efefef;\nmargin: 0;\ndisplay: flex;\nflex-direction: column;\nwidth: 140px;\ntransition: transform 0.25s;\n&:hover  {\n  transform: scale(1.3);\n}\n`;\n\nexport const ListItemTitle = styled.h2`\n  padding-top: 2px;\n  font-size: 0.8em;\n  color: #efefef;\n  margin: 0;\n`;\n\nexport const ListItemText = styled.p`\n  padding-top: 2px;\n  margin: 0;\n  font-size: 0.7em;\n  color: #efefef;\n`;","import { useEffect, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport {\n  MoviesButton,\n  MoviesContainer,\n  MoviesForm,\n  MoviesInput,\n  MoviesLink,\n  MoviesList,\n  ListItemTitle,\n  ListItemText,\n} from './Movies.styled';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/search/movie';\nconst API_KEY = 'api_key=dfc4dcf378e2f794649c11a1b66cbaf1';\n\nconst Movies = () => {\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const location = useLocation();\n  const queryParams = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (!queryParams) {\n      return;\n    }\n    setIsLoading(true);\n    const getMoviesByQuery = async () =>\n      await fetch(\n        `${BASE_URL}?${API_KEY}&query=${queryParams}&include_adult=false&language=en-US&page=1`\n      )\n        .then(response => response.json())\n        .then(data => {\n          setMovies(data.results);\n        })\n        .catch(err => console.error(err))\n        .finally(setIsLoading(false));\n\n    getMoviesByQuery();\n  }, [queryParams]);\n\n  const onChange = e => {\n    setQuery(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!query) {\n      alert('Select any query');\n      return;\n    }\n    setSearchParams({ query });\n    e.currentTarget.reset();\n  };\n\n  return (\n    <MoviesContainer>\n      <MoviesForm onSubmit={handleSubmit}>\n        <MoviesInput type=\"text\" value={query} onChange={onChange} />\n        <MoviesButton type=\"submit\">Search</MoviesButton>\n      </MoviesForm>\n\n      <MoviesList>\n        {movies.map(({ id, original_title, poster_path, release_date }) => {\n          return (\n            <li key={id}>\n              <MoviesLink to={`${id}`} state={{ from: location }}>\n                <img\n                  src={`https://image.tmdb.org/t/p/w200/${poster_path}`}\n                  alt=\"img\"\n                />\n                <ListItemTitle>{original_title}</ListItemTitle>\n                <ListItemText>{release_date}</ListItemText>\n              </MoviesLink>\n            </li>\n          );\n        })}\n      </MoviesList>\n\n      {!movies.length && <p>Find your movie</p>}\n      {isLoading && <div>Loading...</div>}\n    </MoviesContainer>\n  );\n};\n\nexport default Movies;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["MoviesList","styled","MoviesContainer","MoviesForm","MoviesInput","MoviesButton","MoviesLink","NavLink","ListItemTitle","ListItemText","useState","query","setQuery","movies","setMovies","isLoading","setIsLoading","useSearchParams","searchParams","setSearchParams","location","useLocation","queryParams","get","useEffect","getMoviesByQuery","fetch","then","response","json","data","results","catch","err","console","error","finally","onSubmit","e","preventDefault","currentTarget","reset","alert","type","value","onChange","target","map","id","original_title","poster_path","release_date","to","state","from","src","alt","length","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","undefined"],"sourceRoot":""}